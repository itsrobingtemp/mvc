{% extends "base.html.twig" %}

{% block title %}Rapporter{% endblock %}

{% block body %}
    <h1>Rapporter</h1>
    <p>Här finns mina redovsiningsrapporter.</p>

    <h1><a href="#kmom01">Kmom01</a></h1>
    <h2>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</h2>

    <p>
      Jag har jobbat en hel del med objektorienterad programmering, dock främst inom generativ konst 
      med Python och Javascript.
    </p>

    <p>
      Att programmera objektorienterat kräver en liten tankeomställning från det funktionella sättet att 
      programmera, men jag gillar det rätt så mycket ändå.
    </p>

    <h2>
      Berätta kort om PHPs modell för klasser och objekt. 
      Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?
    </h2>
    
    <p>
      Det viktigaste för en nybörjare att förstå är antagligen vad en klass och vad ett objekt verkligen är.
      Att en klass kan ses som en ritning innehållande olika attribut och metoder, som man kan skapa objekt av.
    </p>

    <p>
      Därefter är det nog viktigt att kunna själva syntaxet för att skapa klasserna, metoderna, attributen och objekten.
      Kan man detta kan man nog börja skapa sina första klasser, även om man inte vet allt om t.ex. arv, access modifiers etc.
    </p>
    
    <h2>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</h2>
    
    <p>
      Symfony känns som ett rätt robust ramverk för att bygga upp webbsidor i. Dock känns det aningen "stort" och i mitt fall 
      rätt långsamt att jobba med (kanske beror på att jag använder Windows med WSL2 Ubuntu).
    </p>

    <p>
      Överlag har det dock varit relativt "straight forward" att komma igång med Symfony genom Ubuntu i WSL2 (som jag gillar väldigt mycket just nu).
    </p>
    
    <h2>
      Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? 
      Är det några särskilda områden som du känner att du vill veta mer om? 
      Lyft fram några delar av artikeln som du känner mer värdefulla.
    </h2>
    
    <p>
      Jag fastnade främst för kapitlet om "templating", där man förklarar hur "views"-delen i MVC-mönstret ser ut. Detta påminner mig mycket
      om t.ex. den statiska webbsidegeneratorn Hugo, där man bygger upp sina webbsidor i HTML-views och Markdown-data "injectas" in i dessa på ett mycket 
      snyggt sätt genom Go.
    </p>

    <p>
      Även kapitlet "Code Style Guide" gav många bra tips om länkar till hur man skriver PHP på ett snyggt och sammanhängande sätt.
    </p>
    
    <h2>Vilken är din TIL för detta kmom?</h2>

    <p>Min TIL är faktiskt Ubuntu i WSL2, som jag inte har haft koll på innan. Det fungerar väldigt smidigt än så länge.</p>

    <hr>

    <h1><a href="#kmom02">Kmom02</a></h1>
    <h2>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</h2>

    <h3>Arv</h3>
    <p>
      När en klass ärver av en annan klass skickas basklassens attribut och metoder över till den ärvande klassen, som sedan kan modifiera dessa eller lägga till fler attribut och metoder.
    </p>

    <h3>Komposition</h3>
    <p>
      Vid komposition "äger" en klass en annan klass, dvs. den ägda klassen skulle inte existera utan den ägande klassen.
    </p>

    <h3>Interface</h3>
    <p>
      Med interface tvingar man en klass som "implement:ar" interfacet att innehålla specifika metoder.
    </p>

    <h3>Trait</h3>
    <p>
      Trait är ett sätt att återanvända attribut och metoder mellan flera klasser utan att ha en "basklass" som vid arv.
    </p>

    <h2>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</h2>

    <p>Jag är hyfsat nöjd med min implementation gällande klasserna. Dock tycker jag själv att jag skulle kunnat lösa korten och dess attribut på ett snyggare sätt, eftersom 
    jag nu använder mig av arrayer där jag tvingas hålla koll på vilket index som är vilket, t.ex. index 0 är kortets value och index 1 är kortets suit.</p>

    <p>Jag skulle även kunna återanvända kod på ett bättre sätt mellan template-filerna, men detta är något jag får se till att spendera mera tid på i fortsättningen.</p>

    <h2>Vilka är dina refelktioner så här långt med att jobb i Symfony med applikationskod enligt MVC?</h2>

    <p>
      MVC-tänket känns rätt logiskt att hålla koll på, och verkar fungera smidigt i Symfony, så det kan jag inte klaga på. Dock tar Symfony väldigt lång tid på sig att ladda mellan uppdateringar i koden, något som jag försökt lösa men inte hittat en lösning på ännu. Sättet jag kör Symfony & PHP på med WSL2 och Ubuntu kanske inte är optimalt.
    </p>

    <h2>Vilken är din TIL för detta kmom?</h2>

    <p>Min TIL är att jag lärt mig mer om hur interface och trait fungerar i PHP.</p>

    <h1><a href="#kmom03">Kmom03</a></h1>
    <h2>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</h2>

    <p>
      Det kändes rätt bra att lägga upp en liten struktur innan jag började programmera. Dels så hjälpte det mig förstå hur flödet skulle 
      kunna se ut (routes) och att fundera lite på vilka klasser som skulle behövas. Jag följde ganska långt strukturen jag hade lagt upp.
    </p>

    <h2>
      Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden, dina klasser och applikationen som helhet?
    </h2>

    <p>
      Jag är faktiskt ovanligt nöjd med min lösning för denna uppgift. Jag lyckades med att hålla koden i kontrollerna så minimal som möjligt,
      och istället hålla logiken inuti min TwentyOne-klass. Dessutom känns det rätt bra att hålla all data inuti en och samma array, vilket 
      gör att jag lätt kan hålla reda på datan i session då användaren skickas mellan routsen.
    </p>

    <h2>
      Vilken är din känsla för att koda i ett ramverk som Symfony, så här långt in i kursen?
    </h2>

    <p>
      Som i de tidigare kursmomenten har jag lite problem med prestandan i Symfony, vilket leder till att sidor laddar väldigt trögt. Dock löste jag 
      detta med att skriva en stor del av koden utanför ramverket (i PHP-filer), vilket gick smidigt. För övrigt gillar jag Symfony rätt så bra.
    </p>

    <h3>
      Vilken är din TIL för detta kmom?
    </h3>

    <p>
      Min TIL är att om jag har fortsatta problem med Symfony-prestandan så kan jag skriva koden utanför till en början innan jag implementerar den inuti ramverket.
    </p>
{% endblock %}